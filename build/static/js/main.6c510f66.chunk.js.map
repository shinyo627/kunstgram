{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/modals/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snapShot","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","motion","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFireStore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","useFirestore","map","key","onClick","layout","whileHover","opacity","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c510f66.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className='title'>\n      <h1>Kunstgram</h1>\n      <h2>Your Kunst</h2>\n      <p>+++</p>\n    </div>\n  );\n};\n\nexport default Title;\n","import firebase from 'firebase';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: 'AIzaSyD1_JYjxlTVYNDja00-2xxCVv1J1NXn1gk',\n  authDomain: 'yoseob-kunstgram.firebaseapp.com',\n  projectId: 'yoseob-kunstgram',\n  storageBucket: 'yoseob-kunstgram.appspot.com',\n  messagingSenderId: '388875357149',\n  appId: '1:388875357149:web:391aeece9ae830924ac434',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };\n","import { useState, useEffect } from 'react';\nimport {\n  projectStorage,\n  projectFirestore,\n  timestamp,\n} from '../firebase/config';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    // Creating reference to a file inside default firebase storage\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n\n    storageRef.put(file).on(\n      'state_changed',\n      (snapShot) => {\n        // Progress in percentage during snapshot of the time the file being uploaded\n        let percentage =\n          (snapShot.bytesTransferred / snapShot.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        // Error handler\n        setError(err);\n      },\n      async () => {\n        // Setting url with reference of the file from fireBase upon successful upload\n        const url = await storageRef.getDownloadURL();\n        const createdAt = timestamp();\n        collectionRef.add({ url, createdAt });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n","import React, { useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\nimport useStorage from '../hooks/useStorage';\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { url, progress } = useStorage(file);\n  console.log('URL? ', progress, url);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n  //   return <; className='progress-bar' style={{ width: progress + `%` }} />;\n  return (\n    <motion.div\n      className='progress-bar'\n      initial={{ width: 0 }}\n      animate={{ width: progress + `%` }}\n    />\n  );\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const types = ['image/png', 'image/jpeg'];\n\n  const changeHandler = (e) => {\n    const selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n\n      setError(`Please select an image file i.e) png or jpeg`);\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input type='file' onChange={changeHandler} />\n        <span>+</span>\n      </label>\n      <div className='output'>\n        {error && <div className='error'>{error}</div>}\n        {file && <div>{file.name}</div>}\n        {file && <ProgressBar file={file} setFile={setFile} />}\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;\n","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFireStore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    // Fetching & Watching real time data update with Firestore\n    // unsub returns function that can be used to unsubscribe when unmounted\n    const unsub = projectFirestore\n      .collection(collection)\n      .orderBy('createdAt', 'desc')\n      .onSnapshot((snapShot) => {\n        const documents = [];\n\n        // Iterating through all documents inside 'image' collection\n        // Setting per image documents ob with all the fields and unique id\n        snapShot.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n\n        setDocs(documents);\n      });\n\n    return () => unsub();\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFireStore;\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\nimport useFirestore from '../hooks/useFirestore';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore('images');\n  console.log(docs);\n\n  return (\n    <div className='img-grid'>\n      {docs &&\n        docs.map((doc) => {\n          return (\n            <motion.div\n              key={doc.id}\n              className='img-wrap'\n              onClick={() => setSelectedImg(doc.url)}\n              // *** motion ***\n              layout\n              whileHover={{ opacity: 1 }}\n            >\n              <motion.img\n                src={doc.url}\n                alt='images-fromFirestore'\n                // *** motion ***\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 1 }}\n              />\n            </motion.div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n  const handleClick = (e) => {\n    if (e.target.classList.contains('backdrop')) {\n      setSelectedImg(null);\n    }\n  };\n\n  return (\n    <motion.div\n      className='backdrop'\n      onClick={handleClick}\n      // *** motion ***\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img\n        src={selectedImg}\n        alt='enlarged-pic'\n        // *** motion ***\n        // y is not css prop but from motion and x, y axis base\n        initial={{ y: `-100vh` }}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/modals/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className='App'>\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}